set nocompatible

" enable syntax 
syntax on
syntax enable

" for converting tabs to space, and for handling other tab related issues
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

" show command
set showcmd

" matching braces
set showmatch

" enable mouse in vim { mostly not required }
"set mouse=a 


set scrolloff=5
set backspace=indent,eol,start
set ttyfast                         " fast scroll

" status line
set laststatus=2
"set statusline=%F%m%r%h%w\ [TYPE=%Y]\ [CURSOR=%l,%v][%p%%]
set encoding=utf-8

" show line number
set number
nnoremap <F2> :set nonumber! noai!<CR>

" turnoff line numbers
"set nonumber 

set ruler " show column number in status bar

" indentation
set autoindent
filetype on
"filetype plugin indent on

set wildmenu

" color scheme for vim and vimdiff
if &diff
    syntax off
    " adding controls for colors in vimdiff
    highlight DiffAdd    cterm=NONE ctermfg=15 ctermbg=22
    highlight DiffDelete cterm=NONE ctermfg=15 ctermbg=124
    highlight DiffChange cterm=NONE ctermfg=15 ctermbg=22
    highlight DiffText   cterm=NONE ctermfg=15 ctermbg=88
else 
    colorscheme twilight256
    " adding colors for highlighting current cursor line
    set cursorline
    highlight CursorLine cterm=NONE ctermbg=234
endif


" search in vim 
set incsearch       " incremental search
set hlsearch        " highlight matched items in search
set ignorecase      " ignore case while search

" colors for matched search items 
highlight Search cterm=NONE ctermbg=220 ctermfg=0

" Press CTRL+L for removing the highlighted colors after search
nnoremap <silent> <C-l> :nohl<CR><C-l>

set noshowmode
" remove trailing spaces at end of line
"i:%s/\s\+$//

" *********************************************************************
" Installing plugins via vim-plug
" List here all the plugins to be installed
call plug#begin('~/.vim/plugged')
    Plug 'itchyny/lightline.vim',
    Plug 'tpope/vim-fugitive',
    Plug 'airblade/vim-gitgutter',
    Plug 'scrooloose/nerdtree',
    Plug 'ctrlpvim/ctrlp.vim'
call plug#end()
" Installing plugins ends.

" **********************************************************************
"Settings for ctrlp plugin to find files by pressing CTRL+p
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }


" **********************************************************************
"  Settings for NerdTree 
" TIP-01: From NerdTree, navigate to file and press t to open that file in new tab"
" TIP-02: To navigate between file tabs, use CTRL+PgUp and CTRL+PgDn

" Toggle NerdTree with CTRL+n
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
"autocmd vimenter * NERDTree
let g:NERDTreeQuitOnOpen = 1
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" **********************************************************************
" Settings for lightline plugin for status line
let g:lightline = {
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head',
      \   'filename': 'LightlineFilename'
      \ },
      \ }
function! LightlineFilename()
  let root = fnamemodify(get(b:, 'git_dir'), ':h')
  let path = expand('%:p')
  if path[:len(root)-1] ==# root
    return path[len(root)+1:]
  endif
  return expand('%')
endfunction
" ************************************************************************
